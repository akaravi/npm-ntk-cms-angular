{"version":3,"file":"ngx-smart-modal.component.d.ts","sources":["ngx-smart-modal.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, EventEmitter, OnDestroy, OnInit, QueryList, Renderer2, Type, ViewContainerRef } from '@angular/core';\nexport declare class NgxSmartModalComponent implements OnInit, OnDestroy, AfterViewInit {\n    private _renderer;\n    private _changeDetectorRef;\n    private componentFactoryResolver;\n    private _document;\n    private _platformId;\n    closable: boolean;\n    escapable: boolean;\n    dismissable: boolean;\n    identifier: string;\n    customClass: string;\n    visible: boolean;\n    backdrop: boolean;\n    force: boolean;\n    hideDelay: number;\n    autostart: boolean;\n    target: string;\n    ariaLabel: string | null;\n    ariaLabelledBy: string | null;\n    ariaDescribedBy: string | null;\n    refocus: boolean;\n    visibleChange: EventEmitter<boolean>;\n    onClose: EventEmitter<any>;\n    onCloseFinished: EventEmitter<any>;\n    onDismiss: EventEmitter<any>;\n    onDismissFinished: EventEmitter<any>;\n    onAnyCloseEvent: EventEmitter<any>;\n    onAnyCloseEventFinished: EventEmitter<any>;\n    onOpen: EventEmitter<any>;\n    onOpenFinished: EventEmitter<any>;\n    onEscape: EventEmitter<any>;\n    onDataAdded: EventEmitter<any>;\n    onDataRemoved: EventEmitter<any>;\n    contentComponent: Type<Component>;\n    layerPosition: number;\n    overlayVisible: boolean;\n    openedClass: boolean;\n    createFrom: string;\n    private _data;\n    private nsmContent;\n    nsmDialog: QueryList<ElementRef>;\n    private nsmOverlay;\n    dynamicContentContainer: QueryList<ViewContainerRef>;\n    constructor(_renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef, componentFactoryResolver: ComponentFactoryResolver, _document: any, _platformId: any);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Open the modal instance\n     *\n     * @param top open the modal top of all other\n     * @returns the modal component\n     */\n    open(top?: boolean): NgxSmartModalComponent;\n    /**\n     * Close the modal instance\n     *\n     * @returns the modal component\n     */\n    close(): NgxSmartModalComponent;\n    /**\n     * Dismiss the modal instance\n     *\n     * @param e the event sent by the browser\n     * @returns the modal component\n     */\n    dismiss(e: any): NgxSmartModalComponent;\n    /**\n     * Toggle visibility of the modal instance\n     *\n     * @param top open the modal top of all other\n     * @returns the modal component\n     */\n    toggle(top?: boolean): NgxSmartModalComponent;\n    /**\n     * Add a custom class to the modal instance\n     *\n     * @param className the class to add\n     * @returns the modal component\n     */\n    addCustomClass(className: string): NgxSmartModalComponent;\n    /**\n     * Remove a custom class to the modal instance\n     *\n     * @param className the class to remove\n     * @returns the modal component\n     */\n    removeCustomClass(className?: string): NgxSmartModalComponent;\n    /**\n     * Returns the visibility state of the modal instance\n     */\n    isVisible(): boolean;\n    /**\n     * Checks if data is attached to the modal instance\n     */\n    hasData(): boolean;\n    /**\n     * Attach data to the modal instance\n     *\n     * @param data the data to attach\n     * @param force override potentially attached data\n     * @returns the modal component\n     */\n    setData(data: any, force?: boolean): NgxSmartModalComponent;\n    /**\n     * Retrieve the data attached to the modal instance\n     */\n    getData(): any;\n    /**\n     * Remove the data attached to the modal instance\n     *\n     * @returns the modal component\n     */\n    removeData(): NgxSmartModalComponent;\n    /**\n     * Add body class modal opened\n     *\n     * @returns the modal component\n     */\n    addBodyClass(): NgxSmartModalComponent;\n    /**\n     * Add body class modal opened\n     *\n     * @returns the modal component\n     */\n    removeBodyClass(): NgxSmartModalComponent;\n    markForCheck(): void;\n    /**\n     * Listens for window resize event and recalculates modal instance position if it is element-relative\n     */\n    targetPlacement(): boolean | void;\n    private _sendEvent(name, extraData?);\n    /**\n     * Is current platform browser\n     */\n    private readonly isBrowser;\n    /**\n     * Creates content inside provided ViewContainerRef\n     */\n    private createDynamicContent(changes, factory);\n}\n"]}