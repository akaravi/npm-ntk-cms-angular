{"version":3,"file":"ngx-smart-modal.js","sources":["../../src/config/ngx-smart-modal.config.ts","../../src/components/ngx-smart-modal.component.ts","../../src/services/ngx-smart-modal-stack.service.ts","../../src/services/ngx-smart-modal.service.ts","../../src/modules/ngx-smart-modal.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const NgxSmartModalConfig = {\n    bodyClassOpen: 'dialog-open',\n    prefixEvent: 'ngx-smart-modal.'\n};\n\nexport interface INgxSmartModalOptions {\n    closable?: boolean;\n    escapable?: boolean;\n    dismissable?: boolean;\n    customClass?: string;\n    backdrop?: boolean;\n    force?: boolean;\n    hideDelay?: number;\n    autostart?: boolean;\n    target?: string;\n    ariaLabel?: string;\n    ariaLabelledBy?: string;\n    ariaDescribedBy?: string;\n    refocus?: boolean;\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  Type,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NgxSmartModalConfig } from '../config/ngx-smart-modal.config';\n\n@Component({\n  selector: 'ngx-smart-modal',\n  template: `\n    <div *ngIf=\"overlayVisible\"\n         [style.z-index]=\"visible ? layerPosition-1 : -1\"\n         [ngClass]=\"{'transparent':!backdrop, 'overlay':true, 'nsm-overlay-open':openedClass}\"\n         (mousedown)=\"dismiss($event)\" #nsmOverlay>\n      <div [style.z-index]=\"visible ? layerPosition : -1\"\n           [ngClass]=\"['nsm-dialog', customClass, openedClass ? 'nsm-dialog-open': 'nsm-dialog-close']\" #nsmDialog\n           [attr.aria-hidden]=\"openedClass ? false : true\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledBy\"\n           [attr.aria-describedby]=\"ariaDescribedBy\">\n        <div class=\"nsm-content\" #nsmContent>\n          <div class=\"nsm-body\">\n            <ng-template #dynamicContent></ng-template>\n            <ng-content></ng-content>\n\n          </div>\n          <button type=\"button\" *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"nsm-dialog-btn-close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"\n                 xml:space=\"preserve\" width=\"16px\" height=\"16px\">\n              <g>\n                <path d=\"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\"\n                      fill=\"currentColor\"/>\n              </g>\n              <g>\n                <path d=\"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\"\n                      fill=\"currentColor\"/>\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NgxSmartModalComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public closable: boolean = true;\n  @Input() public escapable: boolean = true;\n  @Input() public dismissable: boolean = true;\n  @Input() public identifier: string = '';\n  @Input() public customClass: string = 'nsm-dialog-animation-fade';\n  @Input() public visible: boolean = false;\n  @Input() public backdrop: boolean = true;\n  @Input() public force: boolean = true;\n  @Input() public hideDelay: number = 500;\n  @Input() public autostart: boolean = false;\n  @Input() public target: string = '';\n  @Input() public ariaLabel: string | null = null;\n  @Input() public ariaLabelledBy: string | null = null;\n  @Input() public ariaDescribedBy: string | null = null;\n  @Input() public refocus: boolean = true;\n\n  @Output() public visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public onClose: EventEmitter<any> = new EventEmitter();\n  @Output() public onCloseFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onDismiss: EventEmitter<any> = new EventEmitter();\n  @Output() public onDismissFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onAnyCloseEvent: EventEmitter<any> = new EventEmitter();\n  @Output() public onAnyCloseEventFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onOpen: EventEmitter<any> = new EventEmitter();\n  @Output() public onOpenFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onEscape: EventEmitter<any> = new EventEmitter();\n  @Output() public onDataAdded: EventEmitter<any> = new EventEmitter();\n  @Output() public onDataRemoved: EventEmitter<any> = new EventEmitter();\n\n  public contentComponent: Type<Component>;\n  public layerPosition: number = 1041;\n  public overlayVisible: boolean = false;\n  public openedClass: boolean = false;\n\n  public createFrom = 'html';\n\n  private _data: any;\n\n  @ViewChildren('nsmContent') private nsmContent: QueryList<ElementRef>;\n  @ViewChildren('nsmDialog') public nsmDialog: QueryList<ElementRef>;\n  @ViewChildren('nsmOverlay') private nsmOverlay: QueryList<ElementRef>;\n  @ViewChildren('dynamicContent', { read: ViewContainerRef }) dynamicContentContainer: QueryList<ViewContainerRef>;\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(PLATFORM_ID) private _platformId: any,\n  ) { }\n\n  public ngOnInit(): void {\n    if (!this.identifier || !this.identifier.length) {\n      throw new Error('identifier field isn’t set. Please set one before calling <ngx-smart-modal> in a template.');\n    }\n\n    this._sendEvent('create');\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.contentComponent) {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(this.contentComponent);\n      this.createDynamicContent(this.dynamicContentContainer, factory);\n      this.dynamicContentContainer.changes.subscribe((contentViewContainers: QueryList<ViewContainerRef>) => {\n        this.createDynamicContent(contentViewContainers, factory);\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._sendEvent('delete');\n  }\n\n  /**\n   * Open the modal instance\n   *\n   * @param top open the modal top of all other\n   * @returns the modal component\n   */\n  public open(top?: boolean): NgxSmartModalComponent {\n    this._sendEvent('open', { top: top });\n\n    return this;\n  }\n\n  /**\n   * Close the modal instance\n   *\n   * @returns the modal component\n   */\n  public close(): NgxSmartModalComponent {\n    this._sendEvent('close');\n\n    return this;\n  }\n\n  /**\n   * Dismiss the modal instance\n   *\n   * @param e the event sent by the browser\n   * @returns the modal component\n   */\n  public dismiss(e: any): NgxSmartModalComponent {\n    if (!this.dismissable || !e.target.classList.contains('overlay')) {\n      return this;\n    }\n\n    this._sendEvent('dismiss');\n\n    return this;\n  }\n\n  /**\n   * Toggle visibility of the modal instance\n   *\n   * @param top open the modal top of all other\n   * @returns the modal component\n   */\n  public toggle(top?: boolean): NgxSmartModalComponent {\n    this._sendEvent('toggle', { top: top });\n\n    return this;\n  }\n\n  /**\n   * Add a custom class to the modal instance\n   *\n   * @param className the class to add\n   * @returns the modal component\n   */\n  public addCustomClass(className: string): NgxSmartModalComponent {\n    if (!this.customClass.length) {\n      this.customClass = className;\n    } else {\n      this.customClass += ' ' + className;\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove a custom class to the modal instance\n   *\n   * @param className the class to remove\n   * @returns the modal component\n   */\n  public removeCustomClass(className?: string): NgxSmartModalComponent {\n    if (className) {\n      this.customClass = this.customClass.replace(className, '').trim();\n    } else {\n      this.customClass = '';\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the visibility state of the modal instance\n   */\n  public isVisible(): boolean {\n    return this.visible;\n  }\n\n  /**\n   * Checks if data is attached to the modal instance\n   */\n  public hasData(): boolean {\n    return this._data !== undefined;\n  }\n\n  /**\n   * Attach data to the modal instance\n   *\n   * @param data the data to attach\n   * @param force override potentially attached data\n   * @returns the modal component\n   */\n  public setData(data: any, force?: boolean): NgxSmartModalComponent {\n    if (!this.hasData() || (this.hasData() && force)) {\n      this._data = data;\n      this.onDataAdded.emit(this._data);\n      this.markForCheck();\n    }\n\n    return this;\n  }\n\n  /**\n   * Retrieve the data attached to the modal instance\n   */\n  public getData(): any {\n    return this._data;\n  }\n\n  /**\n   * Remove the data attached to the modal instance\n   *\n   * @returns the modal component\n   */\n  public removeData(): NgxSmartModalComponent {\n    this._data = undefined;\n    this.onDataRemoved.emit(true);\n    this.markForCheck();\n\n    return this;\n  }\n\n  /**\n   * Add body class modal opened\n   *\n   * @returns the modal component\n   */\n  public addBodyClass(): NgxSmartModalComponent {\n    this._renderer.addClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n\n  /**\n   * Add body class modal opened\n   *\n   * @returns the modal component\n   */\n  public removeBodyClass(): NgxSmartModalComponent {\n    this._renderer.removeClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n\n  public markForCheck() {\n    try {\n      this._changeDetectorRef.detectChanges();\n    } catch (e) {\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Listens for window resize event and recalculates modal instance position if it is element-relative\n   */\n  @HostListener('window:resize')\n  public targetPlacement(): boolean | void {\n    if (!this.isBrowser || !this.nsmDialog.length || !this.nsmContent.length || !this.nsmOverlay.length || !this.target) {\n      return false;\n    }\n    const targetElement = this._document.querySelector(this.target);\n\n    if (!targetElement) {\n      return false;\n    }\n\n    const targetElementRect = targetElement.getBoundingClientRect();\n    const bodyRect = this.nsmOverlay.first.nativeElement.getBoundingClientRect();\n\n    const nsmContentRect = this.nsmContent.first.nativeElement.getBoundingClientRect();\n    const nsmDialogRect = this.nsmDialog.first.nativeElement.getBoundingClientRect();\n\n    const marginLeft = parseInt(getComputedStyle(this.nsmContent.first.nativeElement).marginLeft as any, 10);\n    const marginTop = parseInt(getComputedStyle(this.nsmContent.first.nativeElement).marginTop as any, 10);\n\n    let offsetTop = targetElementRect.top - nsmDialogRect.top - ((nsmContentRect.height - targetElementRect.height) / 2);\n    let offsetLeft = targetElementRect.left - nsmDialogRect.left - ((nsmContentRect.width - targetElementRect.width) / 2);\n\n    if (offsetLeft + nsmDialogRect.left + nsmContentRect.width + (marginLeft * 2) > bodyRect.width) {\n      offsetLeft = bodyRect.width - (nsmDialogRect.left + nsmContentRect.width) - (marginLeft * 2);\n    } else if (offsetLeft + nsmDialogRect.left < 0) {\n      offsetLeft = -nsmDialogRect.left;\n    }\n\n    if (offsetTop + nsmDialogRect.top + nsmContentRect.height + marginTop > bodyRect.height) {\n      offsetTop = bodyRect.height - (nsmDialogRect.top + nsmContentRect.height) - marginTop;\n    }\n\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'top', (offsetTop < 0 ? 0 : offsetTop) + 'px');\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'left', offsetLeft + 'px');\n  }\n\n  private _sendEvent(name: string, extraData?: any): boolean {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    const data = {\n      extraData: extraData,\n      instance: { id: this.identifier, modal: this }\n    };\n\n    const event = new CustomEvent(NgxSmartModalConfig.prefixEvent + name, { detail: data });\n\n    return window.dispatchEvent(event);\n  }\n\n  /**\n   * Is current platform browser\n   */\n  private get isBrowser(): boolean {\n    return isPlatformBrowser(this._platformId);\n  }\n\n  /**\n   * Creates content inside provided ViewContainerRef\n   */\n  private createDynamicContent(changes: QueryList<ViewContainerRef>, factory: ComponentFactory<Component>): void {\n    changes.forEach((viewContainerRef: ViewContainerRef) => {\n      viewContainerRef.clear();\n      viewContainerRef.createComponent(factory);\n      this.markForCheck();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgxSmartModalComponent } from '../../src/components/ngx-smart-modal.component';\nimport { ModalInstance } from './modal-instance';\n\n@Injectable()\nexport class NgxSmartModalStackService {\n  private _modalStack: ModalInstance[];\n\n  constructor() {\n    this._modalStack = [];\n  }\n\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @returns nothing special.\n   */\n  public addModal(modalInstance: ModalInstance, force?: boolean): void {\n    if (force) {\n      const i: number = this._modalStack.findIndex((o: ModalInstance) => o.id === modalInstance.id);\n      if (i > -1) {\n        this._modalStack[i].modal = modalInstance.modal;\n      } else {\n        this._modalStack.push(modalInstance);\n      }\n      return;\n    }\n    this._modalStack.push(modalInstance);\n  }\n\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public getModal(id: string): NgxSmartModalComponent {\n    const i = this._modalStack.find((o: ModalInstance) => o.id === id);\n\n    if (i !== undefined) {\n      return i.modal;\n    } else {\n      throw new Error(`Cannot find modal with identifier ${id}`);\n    }\n  }\n\n  /**\n   * Retrieve all the created modals.\n   *\n   * @returns an array that contains all modal instances.\n   */\n  public getModalStack(): ModalInstance[] {\n    return this._modalStack;\n  }\n\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @returns an array that contains all the opened modals.\n   */\n  public getOpenedModals(): ModalInstance[] {\n    return this._modalStack.filter((o: ModalInstance) => o.modal.visible);\n  }\n\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @returns the opened modal with highest z-index.\n   */\n  public getTopOpenedModal(): NgxSmartModalComponent {\n    if (!this.getOpenedModals().length) {\n      throw new Error('No modal is opened');\n    }\n\n    return this.getOpenedModals()\n      .map((o: ModalInstance) => o.modal)\n      .reduce((highest, item) => item.layerPosition > highest.layerPosition ? item : highest, this.getOpenedModals()[0].modal);\n  }\n\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @returns a higher index from all the existing modal instances.\n   */\n  public getHigherIndex(): number {\n    return Math.max(...this._modalStack.map((o) => o.modal.layerPosition), 1041) + 1;\n  }\n\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @returns the number of modal instances.\n   */\n  public getModalStackCount(): number {\n    return this._modalStack.length;\n  }\n\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param id The modal identifier.\n   * @returns the removed modal instance.\n   */\n  public removeModal(id: string): void {\n    const i: number = this._modalStack.findIndex((o: any) => o.id === id);\n    if (i > -1) {\n      this._modalStack.splice(i, 1);\n    }\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  EmbeddedViewRef,\n  Inject,\n  TemplateRef,\n  Type,\n  PLATFORM_ID\n} from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\nimport { NgxSmartModalComponent } from '../../src/components/ngx-smart-modal.component';\nimport { NgxSmartModalConfig, INgxSmartModalOptions } from '../../src/config/ngx-smart-modal.config';\nimport { NgxSmartModalStackService } from '../../src/services/ngx-smart-modal-stack.service';\n\nimport { ModalInstance } from './modal-instance';\n\nexport type Content<T> = string | TemplateRef<T> | Type<T>;\n\n@Injectable()\nexport class NgxSmartModalService {\n  private lastElementFocused: any;\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _modalStack: NgxSmartModalStackService,\n    private applicationRef: ApplicationRef,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(PLATFORM_ID) private _platformId: any\n  ) {\n    this._addEvents();\n  }\n\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @returns nothing special.\n   */\n  public addModal(modalInstance: ModalInstance, force?: boolean): void {\n    this._modalStack.addModal(modalInstance, force);\n  }\n\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public getModal(id: string): NgxSmartModalComponent {\n    return this._modalStack.getModal(id);\n  }\n\n  /**\n   * Alias of `getModal` to retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public get(id: string): NgxSmartModalComponent {\n    return this.getModal(id);\n  }\n\n  /**\n   * Open a given modal\n   *\n   * @param id The modal identifier used at creation time.\n   * @param force Tell the modal to open top of all other opened modals\n   */\n  public open(id: string, force = false): boolean {\n    return this._openModal(this.get(id), force);\n  }\n\n  /**\n   * Close a given modal\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public close(id: string): boolean {\n    return this._closeModal(this.get(id));\n  }\n\n  /**\n   * Close all opened modals\n   */\n  public closeAll(): void {\n    this.getOpenedModals().forEach((instance: ModalInstance) => {\n      this._closeModal(instance.modal);\n    });\n  }\n\n  /**\n   * Toggles a given modal\n   * If the retrieved modal is opened it closes it, else it opens it.\n   *\n   * @param id The modal identifier used at creation time.\n   * @param force Tell the modal to open top of all other opened modals\n   */\n  public toggle(id: string, force = false): boolean {\n    return this._toggleModal(this.get(id), force);\n  }\n\n  /**\n   * Retrieve all the created modals.\n   *\n   * @returns an array that contains all modal instances.\n   */\n  public getModalStack(): ModalInstance[] {\n    return this._modalStack.getModalStack();\n  }\n\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @returns an array that contains all the opened modals.\n   */\n  public getOpenedModals(): ModalInstance[] {\n    return this._modalStack.getOpenedModals();\n  }\n\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @returns the opened modal with highest z-index.\n   */\n  public getTopOpenedModal(): NgxSmartModalComponent {\n    return this._modalStack.getTopOpenedModal();\n  }\n\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @returns a higher index from all the existing modal instances.\n   */\n  public getHigherIndex(): number {\n    return this._modalStack.getHigherIndex();\n  }\n\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @returns the number of modal instances.\n   */\n  public getModalStackCount(): number {\n    return this._modalStack.getModalStackCount();\n  }\n\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param id The modal identifier.\n   * @returns the removed modal instance.\n   */\n  public removeModal(id: string): void {\n    this._modalStack.removeModal(id);\n  }\n\n  /**\n   * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n   * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n   * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n   * as method output.\n   *\n   * @param data The data you want to associate to the modal.\n   * @param id The modal identifier.\n   * @param force If true, overrides the previous stored data if there was.\n   * @returns true if the given modal exists and the process has been tried, either false.\n   */\n  public setModalData(data: any, id: string, force?: boolean): boolean {\n    let i;\n    if (i = this.get(id)) {\n      i.setData(data, force);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Retrieve modal data by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   * @returns the associated modal data.\n   */\n  public getModalData(id: string): any {\n    let i;\n    if (i = this.get(id)) {\n      return i.getData();\n    }\n\n    return null;\n  }\n\n  /**\n   * Reset the data attached to a given modal.\n   *\n   * @param id The modal identifier used at creation time.\n   * @returns the removed data or false if modal doesn't exist.\n   */\n  public resetModalData(id: string): any | boolean {\n    if (!!this._modalStack.getModalStack().find((o: ModalInstance) => o.id === id)) {\n      const removed: any = this.getModal(id).getData();\n      this.getModal(id).removeData();\n      return removed;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Close the latest opened modal if it has been declared as escapable\n   * Using a debounce system because one or more modals could be listening\n   * escape key press event.\n   */\n  public closeLatestModal(): void {\n    this.getTopOpenedModal().close();\n  }\n\n  /**\n   * Create dynamic NgxSmartModalComponent\n   * @param id The modal identifier used at creation time.\n   * @param content The modal content ( string, templateRef or Component )\n   */\n  public create<T>(id: string, content: Content<T>, options: INgxSmartModalOptions = {}) {\n    try {\n      return this.getModal(id);\n    } catch (e) {\n      const componentFactory = this._componentFactoryResolver.resolveComponentFactory(NgxSmartModalComponent);\n      const ngContent = this._resolveNgContent(content);\n\n      const componentRef = componentFactory.create(this._injector, ngContent);\n\n      if (content instanceof Type) {\n        componentRef.instance.contentComponent = content;\n      }\n\n      componentRef.instance.identifier = id;\n      componentRef.instance.createFrom = 'service';\n\n      if (typeof options.closable === 'boolean') { componentRef.instance.closable = options.closable; }\n      if (typeof options.escapable === 'boolean') { componentRef.instance.escapable = options.escapable; }\n      if (typeof options.dismissable === 'boolean') { componentRef.instance.dismissable = options.dismissable; }\n      if (typeof options.customClass === 'string') { componentRef.instance.customClass = options.customClass; }\n      if (typeof options.backdrop === 'boolean') { componentRef.instance.backdrop = options.backdrop; }\n      if (typeof options.force === 'boolean') { componentRef.instance.force = options.force; }\n      if (typeof options.hideDelay === 'number') { componentRef.instance.hideDelay = options.hideDelay; }\n      if (typeof options.autostart === 'boolean') { componentRef.instance.autostart = options.autostart; }\n      if (typeof options.target === 'string') { componentRef.instance.target = options.target; }\n      if (typeof options.ariaLabel === 'string') { componentRef.instance.ariaLabel = options.ariaLabel; }\n      if (typeof options.ariaLabelledBy === 'string') { componentRef.instance.ariaLabelledBy = options.ariaLabelledBy; }\n      if (typeof options.ariaDescribedBy === 'string') { componentRef.instance.ariaDescribedBy = options.ariaDescribedBy; }\n      if (typeof options.refocus === 'boolean') { componentRef.instance.refocus = options.refocus; }\n\n      this._appRef.attachView(componentRef.hostView);\n\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      this._document.body.appendChild(domElem);\n\n      return componentRef.instance;\n    }\n  }\n\n  private _addEvents(): boolean {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'create', ((e: CustomEvent) => {\n      this._initModal(e.detail.instance);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'delete', ((e: CustomEvent) => {\n      this._deleteModal(e.detail.instance);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'open', ((e: CustomEvent) => {\n      this._openModal(e.detail.instance.modal, e.detail.top);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'toggle', ((e: CustomEvent) => {\n      this._toggleModal(e.detail.instance.modal, e.detail.top);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'close', ((e: CustomEvent) => {\n      this._closeModal(e.detail.instance.modal);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'dismiss', ((e: CustomEvent) => {\n      this._dismissModal(e.detail.instance.modal);\n    }) as EventListener);\n\n    window.addEventListener('keyup', this._escapeKeyboardEvent);\n\n    return true;\n  }\n\n  private _initModal(modalInstance: ModalInstance) {\n    modalInstance.modal.layerPosition += this.getModalStackCount();\n    this.addModal(modalInstance, modalInstance.modal.force);\n\n    if (modalInstance.modal.autostart) {\n      this.open(modalInstance.id);\n    }\n  }\n\n  private _openModal(modal: NgxSmartModalComponent, top?: boolean): boolean {\n    if (modal.visible) {\n      return false;\n    }\n\n    this.lastElementFocused = document.activeElement;\n\n    if (modal.escapable) {\n      window.addEventListener('keyup', this._escapeKeyboardEvent);\n    }\n\n    if (modal.backdrop) {\n      window.addEventListener('keydown', this._trapFocusModal);\n    }\n\n    if (top) {\n      modal.layerPosition = this.getHigherIndex();\n    }\n\n    modal.addBodyClass();\n    modal.overlayVisible = true;\n    modal.visible = true;\n    modal.onOpen.emit(modal);\n    modal.markForCheck();\n\n    setTimeout(() => {\n      modal.openedClass = true;\n\n      if (modal.target) {\n        modal.targetPlacement();\n      }\n\n      modal.nsmDialog.first.nativeElement.setAttribute('role', 'dialog');\n      modal.nsmDialog.first.nativeElement.setAttribute('tabIndex', '-1');\n      modal.nsmDialog.first.nativeElement.setAttribute('aria-modal', 'true');\n      modal.nsmDialog.first.nativeElement.focus();\n\n      modal.markForCheck();\n      modal.onOpenFinished.emit(modal);\n    });\n\n    return true;\n  }\n\n  private _toggleModal(modal: NgxSmartModalComponent, top?: boolean): boolean {\n    if (modal.visible) {\n      return this._closeModal(modal);\n    } else {\n      return this._openModal(modal, top);\n    }\n  }\n\n  private _closeModal(modal: NgxSmartModalComponent): boolean {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onClose.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n      window.removeEventListener('keyup', this._escapeKeyboardEvent);\n      window.removeEventListener('keydown', this._trapFocusModal);\n    }\n\n    setTimeout(() => {\n      modal.visibleChange.emit(modal.visible);\n      modal.visible = false;\n      modal.overlayVisible = false;\n      modal.nsmDialog.first.nativeElement.removeAttribute('tabIndex');\n      modal.markForCheck();\n      modal.onCloseFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n      if (modal.refocus) {\n        this.lastElementFocused.focus();\n      }\n    }, modal.hideDelay);\n\n    return true;\n  }\n\n  private _dismissModal(modal: NgxSmartModalComponent): boolean {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onDismiss.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n    }\n\n    setTimeout(() => {\n      modal.visible = false;\n      modal.visibleChange.emit(modal.visible);\n      modal.overlayVisible = false;\n      modal.markForCheck();\n      modal.onDismissFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n    }, modal.hideDelay);\n\n    return true;\n  }\n\n  private _deleteModal(modalInstance: ModalInstance) {\n    this.removeModal(modalInstance.id);\n\n    if (!this.getModalStack().length) {\n      modalInstance.modal.removeBodyClass();\n    }\n  }\n\n  /**\n   * Resolve content according to the types\n   * @param content The modal content ( string, templateRef or Component )\n   */\n  private _resolveNgContent<T>(content: Content<T>): any[][] | Text[][] {\n    if (typeof content === 'string') {\n      const element = this._document.createTextNode(content);\n      return [[element]];\n    }\n\n    if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(null as any);\n      this.applicationRef.attachView(viewRef);\n      return [viewRef.rootNodes];\n    }\n\n    return [];\n  }\n\n  /**\n   * Close the latest opened modal if escape key event is emitted\n   * @param event The Keyboard Event\n   */\n  private _escapeKeyboardEvent = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      try {\n        const modal = this.getTopOpenedModal();\n\n        if (!modal.escapable) {\n          return false;\n        }\n\n        modal.onEscape.emit(modal);\n        this.closeLatestModal();\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Is current platform browser\n   */\n  private get isBrowser(): boolean {\n    return isPlatformBrowser(this._platformId);\n  }\n\n  /**\n   * While modal is open, the focus stay on it\n   * @param event The Keyboar dEvent\n   */\n  private _trapFocusModal = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      try {\n        const modal = this.getTopOpenedModal();\n\n        if (!modal.nsmDialog.first.nativeElement.contains(document.activeElement)) {\n          event.preventDefault();\n          event.stopPropagation();\n          modal.nsmDialog.first.nativeElement.focus();\n        }\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgxSmartModalService } from '../services/ngx-smart-modal.service';\nimport { NgxSmartModalStackService } from '../services/ngx-smart-modal-stack.service';\nimport { NgxSmartModalComponent } from '../components/ngx-smart-modal.component';\n\n@NgModule({\n  declarations: [NgxSmartModalComponent],\n  entryComponents: [NgxSmartModalComponent],\n  exports: [NgxSmartModalComponent],\n  imports: [CommonModule]\n})\nexport class NgxSmartModalModule {\n  /**\n   * Use in AppModule: new instance of NgxSmartModal.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [\n        NgxSmartModalService,\n        NgxSmartModalStackService\n      ]\n    };\n  }\n\n  /**\n   * Use in features modules with lazy loading: new instance of NgxSmartModal.\n   */\n  public static forChild(): ModuleWithProviders {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [\n        NgxSmartModalService,\n        NgxSmartModalStackService\n      ]\n    };\n  }\n\n  constructor(private serivce: NgxSmartModalService) {\n  }\n}\n"]}