{"version":3,"file":"ngx-smart-modal.js","sources":["../../src/config/ngx-smart-modal.config.ts","../../src/components/ngx-smart-modal.component.ts","../../src/services/ngx-smart-modal-stack.service.ts","../../src/services/ngx-smart-modal.service.ts","../../src/modules/ngx-smart-modal.module.ts"],"sourcesContent":["export const NgxSmartModalConfig = {\n    bodyClassOpen: 'dialog-open',\n    prefixEvent: 'ngx-smart-modal.'\n};\n\nexport interface INgxSmartModalOptions {\n    closable?: boolean;\n    escapable?: boolean;\n    dismissable?: boolean;\n    customClass?: string;\n    backdrop?: boolean;\n    force?: boolean;\n    hideDelay?: number;\n    autostart?: boolean;\n    target?: string;\n    ariaLabel?: string;\n    ariaLabelledBy?: string;\n    ariaDescribedBy?: string;\n    refocus?: boolean;\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  Type,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NgxSmartModalConfig } from '../config/ngx-smart-modal.config';\n\n@Component({\n  selector: 'ngx-smart-modal',\n  template: `\n    <div *ngIf=\"overlayVisible\"\n         [style.z-index]=\"visible ? layerPosition-1 : -1\"\n         [ngClass]=\"{'transparent':!backdrop, 'overlay':true, 'nsm-overlay-open':openedClass}\"\n         (mousedown)=\"dismiss($event)\" #nsmOverlay>\n      <div [style.z-index]=\"visible ? layerPosition : -1\"\n           [ngClass]=\"['nsm-dialog', customClass, openedClass ? 'nsm-dialog-open': 'nsm-dialog-close']\" #nsmDialog\n           [attr.aria-hidden]=\"openedClass ? false : true\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledBy\"\n           [attr.aria-describedby]=\"ariaDescribedBy\">\n        <div class=\"nsm-content\" #nsmContent>\n          <div class=\"nsm-body\">\n            <ng-template #dynamicContent></ng-template>\n            <ng-content></ng-content>\n\n          </div>\n          <button type=\"button\" *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"nsm-dialog-btn-close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"\n                 xml:space=\"preserve\" width=\"16px\" height=\"16px\">\n              <g>\n                <path d=\"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\"\n                      fill=\"currentColor\"/>\n              </g>\n              <g>\n                <path d=\"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\"\n                      fill=\"currentColor\"/>\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NgxSmartModalComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public closable: boolean = true;\n  @Input() public escapable: boolean = true;\n  @Input() public dismissable: boolean = true;\n  @Input() public identifier: string = '';\n  @Input() public customClass: string = 'nsm-dialog-animation-fade';\n  @Input() public visible: boolean = false;\n  @Input() public backdrop: boolean = true;\n  @Input() public force: boolean = true;\n  @Input() public hideDelay: number = 500;\n  @Input() public autostart: boolean = false;\n  @Input() public target: string = '';\n  @Input() public ariaLabel: string | null = null;\n  @Input() public ariaLabelledBy: string | null = null;\n  @Input() public ariaDescribedBy: string | null = null;\n  @Input() public refocus: boolean = true;\n\n  @Output() public visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public onClose: EventEmitter<any> = new EventEmitter();\n  @Output() public onCloseFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onDismiss: EventEmitter<any> = new EventEmitter();\n  @Output() public onDismissFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onAnyCloseEvent: EventEmitter<any> = new EventEmitter();\n  @Output() public onAnyCloseEventFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onOpen: EventEmitter<any> = new EventEmitter();\n  @Output() public onOpenFinished: EventEmitter<any> = new EventEmitter();\n  @Output() public onEscape: EventEmitter<any> = new EventEmitter();\n  @Output() public onDataAdded: EventEmitter<any> = new EventEmitter();\n  @Output() public onDataRemoved: EventEmitter<any> = new EventEmitter();\n\n  public contentComponent: Type<Component>;\n  public layerPosition: number = 1041;\n  public overlayVisible: boolean = false;\n  public openedClass: boolean = false;\n\n  public createFrom = 'html';\n\n  private _data: any;\n\n  @ViewChildren('nsmContent') private nsmContent: QueryList<ElementRef>;\n  @ViewChildren('nsmDialog') public nsmDialog: QueryList<ElementRef>;\n  @ViewChildren('nsmOverlay') private nsmOverlay: QueryList<ElementRef>;\n  @ViewChildren('dynamicContent', { read: ViewContainerRef }) dynamicContentContainer: QueryList<ViewContainerRef>;\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(PLATFORM_ID) private _platformId: any,\n  ) { }\n\n  public ngOnInit(): void {\n    if (!this.identifier || !this.identifier.length) {\n      throw new Error('identifier field isnâ€™t set. Please set one before calling <ngx-smart-modal> in a template.');\n    }\n\n    this._sendEvent('create');\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.contentComponent) {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(this.contentComponent);\n      this.createDynamicContent(this.dynamicContentContainer, factory);\n      this.dynamicContentContainer.changes.subscribe((contentViewContainers: QueryList<ViewContainerRef>) => {\n        this.createDynamicContent(contentViewContainers, factory);\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._sendEvent('delete');\n  }\n\n  /**\n   * Open the modal instance\n   *\n   * @param top open the modal top of all other\n   * @returns the modal component\n   */\n  public open(top?: boolean): NgxSmartModalComponent {\n    this._sendEvent('open', { top: top });\n\n    return this;\n  }\n\n  /**\n   * Close the modal instance\n   *\n   * @returns the modal component\n   */\n  public close(): NgxSmartModalComponent {\n    this._sendEvent('close');\n\n    return this;\n  }\n\n  /**\n   * Dismiss the modal instance\n   *\n   * @param e the event sent by the browser\n   * @returns the modal component\n   */\n  public dismiss(e: any): NgxSmartModalComponent {\n    if (!this.dismissable || !e.target.classList.contains('overlay')) {\n      return this;\n    }\n\n    this._sendEvent('dismiss');\n\n    return this;\n  }\n\n  /**\n   * Toggle visibility of the modal instance\n   *\n   * @param top open the modal top of all other\n   * @returns the modal component\n   */\n  public toggle(top?: boolean): NgxSmartModalComponent {\n    this._sendEvent('toggle', { top: top });\n\n    return this;\n  }\n\n  /**\n   * Add a custom class to the modal instance\n   *\n   * @param className the class to add\n   * @returns the modal component\n   */\n  public addCustomClass(className: string): NgxSmartModalComponent {\n    if (!this.customClass.length) {\n      this.customClass = className;\n    } else {\n      this.customClass += ' ' + className;\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove a custom class to the modal instance\n   *\n   * @param className the class to remove\n   * @returns the modal component\n   */\n  public removeCustomClass(className?: string): NgxSmartModalComponent {\n    if (className) {\n      this.customClass = this.customClass.replace(className, '').trim();\n    } else {\n      this.customClass = '';\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the visibility state of the modal instance\n   */\n  public isVisible(): boolean {\n    return this.visible;\n  }\n\n  /**\n   * Checks if data is attached to the modal instance\n   */\n  public hasData(): boolean {\n    return this._data !== undefined;\n  }\n\n  /**\n   * Attach data to the modal instance\n   *\n   * @param data the data to attach\n   * @param force override potentially attached data\n   * @returns the modal component\n   */\n  public setData(data: any, force?: boolean): NgxSmartModalComponent {\n    if (!this.hasData() || (this.hasData() && force)) {\n      this._data = data;\n      this.onDataAdded.emit(this._data);\n      this.markForCheck();\n    }\n\n    return this;\n  }\n\n  /**\n   * Retrieve the data attached to the modal instance\n   */\n  public getData(): any {\n    return this._data;\n  }\n\n  /**\n   * Remove the data attached to the modal instance\n   *\n   * @returns the modal component\n   */\n  public removeData(): NgxSmartModalComponent {\n    this._data = undefined;\n    this.onDataRemoved.emit(true);\n    this.markForCheck();\n\n    return this;\n  }\n\n  /**\n   * Add body class modal opened\n   *\n   * @returns the modal component\n   */\n  public addBodyClass(): NgxSmartModalComponent {\n    this._renderer.addClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n\n  /**\n   * Add body class modal opened\n   *\n   * @returns the modal component\n   */\n  public removeBodyClass(): NgxSmartModalComponent {\n    this._renderer.removeClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n\n  public markForCheck() {\n    try {\n      this._changeDetectorRef.detectChanges();\n    } catch (e) {\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Listens for window resize event and recalculates modal instance position if it is element-relative\n   */\n  @HostListener('window:resize')\n  public targetPlacement(): boolean | void {\n    if (!this.isBrowser || !this.nsmDialog.length || !this.nsmContent.length || !this.nsmOverlay.length || !this.target) {\n      return false;\n    }\n    const targetElement = this._document.querySelector(this.target);\n\n    if (!targetElement) {\n      return false;\n    }\n\n    const targetElementRect = targetElement.getBoundingClientRect();\n    const bodyRect = this.nsmOverlay.first.nativeElement.getBoundingClientRect();\n\n    const nsmContentRect = this.nsmContent.first.nativeElement.getBoundingClientRect();\n    const nsmDialogRect = this.nsmDialog.first.nativeElement.getBoundingClientRect();\n\n    const marginLeft = parseInt(getComputedStyle(this.nsmContent.first.nativeElement).marginLeft as any, 10);\n    const marginTop = parseInt(getComputedStyle(this.nsmContent.first.nativeElement).marginTop as any, 10);\n\n    let offsetTop = targetElementRect.top - nsmDialogRect.top - ((nsmContentRect.height - targetElementRect.height) / 2);\n    let offsetLeft = targetElementRect.left - nsmDialogRect.left - ((nsmContentRect.width - targetElementRect.width) / 2);\n\n    if (offsetLeft + nsmDialogRect.left + nsmContentRect.width + (marginLeft * 2) > bodyRect.width) {\n      offsetLeft = bodyRect.width - (nsmDialogRect.left + nsmContentRect.width) - (marginLeft * 2);\n    } else if (offsetLeft + nsmDialogRect.left < 0) {\n      offsetLeft = -nsmDialogRect.left;\n    }\n\n    if (offsetTop + nsmDialogRect.top + nsmContentRect.height + marginTop > bodyRect.height) {\n      offsetTop = bodyRect.height - (nsmDialogRect.top + nsmContentRect.height) - marginTop;\n    }\n\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'top', (offsetTop < 0 ? 0 : offsetTop) + 'px');\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'left', offsetLeft + 'px');\n  }\n\n  private _sendEvent(name: string, extraData?: any): boolean {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    const data = {\n      extraData: extraData,\n      instance: { id: this.identifier, modal: this }\n    };\n\n    const event = new CustomEvent(NgxSmartModalConfig.prefixEvent + name, { detail: data });\n\n    return window.dispatchEvent(event);\n  }\n\n  /**\n   * Is current platform browser\n   */\n  private get isBrowser(): boolean {\n    return isPlatformBrowser(this._platformId);\n  }\n\n  /**\n   * Creates content inside provided ViewContainerRef\n   */\n  private createDynamicContent(changes: QueryList<ViewContainerRef>, factory: ComponentFactory<Component>): void {\n    changes.forEach((viewContainerRef: ViewContainerRef) => {\n      viewContainerRef.clear();\n      viewContainerRef.createComponent(factory);\n      this.markForCheck();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgxSmartModalComponent } from '../../src/components/ngx-smart-modal.component';\nimport { ModalInstance } from './modal-instance';\n\n@Injectable()\nexport class NgxSmartModalStackService {\n  private _modalStack: ModalInstance[];\n\n  constructor() {\n    this._modalStack = [];\n  }\n\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @returns nothing special.\n   */\n  public addModal(modalInstance: ModalInstance, force?: boolean): void {\n    if (force) {\n      const i: number = this._modalStack.findIndex((o: ModalInstance) => o.id === modalInstance.id);\n      if (i > -1) {\n        this._modalStack[i].modal = modalInstance.modal;\n      } else {\n        this._modalStack.push(modalInstance);\n      }\n      return;\n    }\n    this._modalStack.push(modalInstance);\n  }\n\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public getModal(id: string): NgxSmartModalComponent {\n    const i = this._modalStack.find((o: ModalInstance) => o.id === id);\n\n    if (i !== undefined) {\n      return i.modal;\n    } else {\n      throw new Error(`Cannot find modal with identifier ${id}`);\n    }\n  }\n\n  /**\n   * Retrieve all the created modals.\n   *\n   * @returns an array that contains all modal instances.\n   */\n  public getModalStack(): ModalInstance[] {\n    return this._modalStack;\n  }\n\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @returns an array that contains all the opened modals.\n   */\n  public getOpenedModals(): ModalInstance[] {\n    return this._modalStack.filter((o: ModalInstance) => o.modal.visible);\n  }\n\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @returns the opened modal with highest z-index.\n   */\n  public getTopOpenedModal(): NgxSmartModalComponent {\n    if (!this.getOpenedModals().length) {\n      throw new Error('No modal is opened');\n    }\n\n    return this.getOpenedModals()\n      .map((o: ModalInstance) => o.modal)\n      .reduce((highest, item) => item.layerPosition > highest.layerPosition ? item : highest, this.getOpenedModals()[0].modal);\n  }\n\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @returns a higher index from all the existing modal instances.\n   */\n  public getHigherIndex(): number {\n    return Math.max(...this._modalStack.map((o) => o.modal.layerPosition), 1041) + 1;\n  }\n\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @returns the number of modal instances.\n   */\n  public getModalStackCount(): number {\n    return this._modalStack.length;\n  }\n\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param id The modal identifier.\n   * @returns the removed modal instance.\n   */\n  public removeModal(id: string): void {\n    const i: number = this._modalStack.findIndex((o: any) => o.id === id);\n    if (i > -1) {\n      this._modalStack.splice(i, 1);\n    }\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  EmbeddedViewRef,\n  Inject,\n  TemplateRef,\n  Type,\n  PLATFORM_ID\n} from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\nimport { NgxSmartModalComponent } from '../../src/components/ngx-smart-modal.component';\nimport { NgxSmartModalConfig, INgxSmartModalOptions } from '../../src/config/ngx-smart-modal.config';\nimport { NgxSmartModalStackService } from '../../src/services/ngx-smart-modal-stack.service';\n\nimport { ModalInstance } from './modal-instance';\n\nexport type Content<T> = string | TemplateRef<T> | Type<T>;\n\n@Injectable()\nexport class NgxSmartModalService {\n  private lastElementFocused: any;\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _modalStack: NgxSmartModalStackService,\n    private applicationRef: ApplicationRef,\n    @Inject(DOCUMENT) private _document: any,\n    @Inject(PLATFORM_ID) private _platformId: any\n  ) {\n    this._addEvents();\n  }\n\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @returns nothing special.\n   */\n  public addModal(modalInstance: ModalInstance, force?: boolean): void {\n    this._modalStack.addModal(modalInstance, force);\n  }\n\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public getModal(id: string): NgxSmartModalComponent {\n    return this._modalStack.getModal(id);\n  }\n\n  /**\n   * Alias of `getModal` to retrieve a modal instance by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public get(id: string): NgxSmartModalComponent {\n    return this.getModal(id);\n  }\n\n  /**\n   * Open a given modal\n   *\n   * @param id The modal identifier used at creation time.\n   * @param force Tell the modal to open top of all other opened modals\n   */\n  public open(id: string, force = false): boolean {\n    return this._openModal(this.get(id), force);\n  }\n\n  /**\n   * Close a given modal\n   *\n   * @param id The modal identifier used at creation time.\n   */\n  public close(id: string): boolean {\n    return this._closeModal(this.get(id));\n  }\n\n  /**\n   * Close all opened modals\n   */\n  public closeAll(): void {\n    this.getOpenedModals().forEach((instance: ModalInstance) => {\n      this._closeModal(instance.modal);\n    });\n  }\n\n  /**\n   * Toggles a given modal\n   * If the retrieved modal is opened it closes it, else it opens it.\n   *\n   * @param id The modal identifier used at creation time.\n   * @param force Tell the modal to open top of all other opened modals\n   */\n  public toggle(id: string, force = false): boolean {\n    return this._toggleModal(this.get(id), force);\n  }\n\n  /**\n   * Retrieve all the created modals.\n   *\n   * @returns an array that contains all modal instances.\n   */\n  public getModalStack(): ModalInstance[] {\n    return this._modalStack.getModalStack();\n  }\n\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @returns an array that contains all the opened modals.\n   */\n  public getOpenedModals(): ModalInstance[] {\n    return this._modalStack.getOpenedModals();\n  }\n\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @returns the opened modal with highest z-index.\n   */\n  public getTopOpenedModal(): NgxSmartModalComponent {\n    return this._modalStack.getTopOpenedModal();\n  }\n\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @returns a higher index from all the existing modal instances.\n   */\n  public getHigherIndex(): number {\n    return this._modalStack.getHigherIndex();\n  }\n\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @returns the number of modal instances.\n   */\n  public getModalStackCount(): number {\n    return this._modalStack.getModalStackCount();\n  }\n\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param id The modal identifier.\n   * @returns the removed modal instance.\n   */\n  public removeModal(id: string): void {\n    this._modalStack.removeModal(id);\n  }\n\n  /**\n   * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n   * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n   * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n   * as method output.\n   *\n   * @param data The data you want to associate to the modal.\n   * @param id The modal identifier.\n   * @param force If true, overrides the previous stored data if there was.\n   * @returns true if the given modal exists and the process has been tried, either false.\n   */\n  public setModalData(data: any, id: string, force?: boolean): boolean {\n    let i;\n    if (i = this.get(id)) {\n      i.setData(data, force);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Retrieve modal data by its identifier.\n   *\n   * @param id The modal identifier used at creation time.\n   * @returns the associated modal data.\n   */\n  public getModalData(id: string): any {\n    let i;\n    if (i = this.get(id)) {\n      return i.getData();\n    }\n\n    return null;\n  }\n\n  /**\n   * Reset the data attached to a given modal.\n   *\n   * @param id The modal identifier used at creation time.\n   * @returns the removed data or false if modal doesn't exist.\n   */\n  public resetModalData(id: string): any | boolean {\n    if (!!this._modalStack.getModalStack().find((o: ModalInstance) => o.id === id)) {\n      const removed: any = this.getModal(id).getData();\n      this.getModal(id).removeData();\n      return removed;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Close the latest opened modal if it has been declared as escapable\n   * Using a debounce system because one or more modals could be listening\n   * escape key press event.\n   */\n  public closeLatestModal(): void {\n    this.getTopOpenedModal().close();\n  }\n\n  /**\n   * Create dynamic NgxSmartModalComponent\n   * @param id The modal identifier used at creation time.\n   * @param content The modal content ( string, templateRef or Component )\n   */\n  public create<T>(id: string, content: Content<T>, options: INgxSmartModalOptions = {}) {\n    try {\n      return this.getModal(id);\n    } catch (e) {\n      const componentFactory = this._componentFactoryResolver.resolveComponentFactory(NgxSmartModalComponent);\n      const ngContent = this._resolveNgContent(content);\n\n      const componentRef = componentFactory.create(this._injector, ngContent);\n\n      if (content instanceof Type) {\n        componentRef.instance.contentComponent = content;\n      }\n\n      componentRef.instance.identifier = id;\n      componentRef.instance.createFrom = 'service';\n\n      if (typeof options.closable === 'boolean') { componentRef.instance.closable = options.closable; }\n      if (typeof options.escapable === 'boolean') { componentRef.instance.escapable = options.escapable; }\n      if (typeof options.dismissable === 'boolean') { componentRef.instance.dismissable = options.dismissable; }\n      if (typeof options.customClass === 'string') { componentRef.instance.customClass = options.customClass; }\n      if (typeof options.backdrop === 'boolean') { componentRef.instance.backdrop = options.backdrop; }\n      if (typeof options.force === 'boolean') { componentRef.instance.force = options.force; }\n      if (typeof options.hideDelay === 'number') { componentRef.instance.hideDelay = options.hideDelay; }\n      if (typeof options.autostart === 'boolean') { componentRef.instance.autostart = options.autostart; }\n      if (typeof options.target === 'string') { componentRef.instance.target = options.target; }\n      if (typeof options.ariaLabel === 'string') { componentRef.instance.ariaLabel = options.ariaLabel; }\n      if (typeof options.ariaLabelledBy === 'string') { componentRef.instance.ariaLabelledBy = options.ariaLabelledBy; }\n      if (typeof options.ariaDescribedBy === 'string') { componentRef.instance.ariaDescribedBy = options.ariaDescribedBy; }\n      if (typeof options.refocus === 'boolean') { componentRef.instance.refocus = options.refocus; }\n\n      this._appRef.attachView(componentRef.hostView);\n\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      this._document.body.appendChild(domElem);\n\n      return componentRef.instance;\n    }\n  }\n\n  private _addEvents(): boolean {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'create', ((e: CustomEvent) => {\n      this._initModal(e.detail.instance);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'delete', ((e: CustomEvent) => {\n      this._deleteModal(e.detail.instance);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'open', ((e: CustomEvent) => {\n      this._openModal(e.detail.instance.modal, e.detail.top);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'toggle', ((e: CustomEvent) => {\n      this._toggleModal(e.detail.instance.modal, e.detail.top);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'close', ((e: CustomEvent) => {\n      this._closeModal(e.detail.instance.modal);\n    }) as EventListener);\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'dismiss', ((e: CustomEvent) => {\n      this._dismissModal(e.detail.instance.modal);\n    }) as EventListener);\n\n    window.addEventListener('keyup', this._escapeKeyboardEvent);\n\n    return true;\n  }\n\n  private _initModal(modalInstance: ModalInstance) {\n    modalInstance.modal.layerPosition += this.getModalStackCount();\n    this.addModal(modalInstance, modalInstance.modal.force);\n\n    if (modalInstance.modal.autostart) {\n      this.open(modalInstance.id);\n    }\n  }\n\n  private _openModal(modal: NgxSmartModalComponent, top?: boolean): boolean {\n    if (modal.visible) {\n      return false;\n    }\n\n    this.lastElementFocused = document.activeElement;\n\n    if (modal.escapable) {\n      window.addEventListener('keyup', this._escapeKeyboardEvent);\n    }\n\n    if (modal.backdrop) {\n      window.addEventListener('keydown', this._trapFocusModal);\n    }\n\n    if (top) {\n      modal.layerPosition = this.getHigherIndex();\n    }\n\n    modal.addBodyClass();\n    modal.overlayVisible = true;\n    modal.visible = true;\n    modal.onOpen.emit(modal);\n    modal.markForCheck();\n\n    setTimeout(() => {\n      modal.openedClass = true;\n\n      if (modal.target) {\n        modal.targetPlacement();\n      }\n\n      modal.nsmDialog.first.nativeElement.setAttribute('role', 'dialog');\n      modal.nsmDialog.first.nativeElement.setAttribute('tabIndex', '-1');\n      modal.nsmDialog.first.nativeElement.setAttribute('aria-modal', 'true');\n      modal.nsmDialog.first.nativeElement.focus();\n\n      modal.markForCheck();\n      modal.onOpenFinished.emit(modal);\n    });\n\n    return true;\n  }\n\n  private _toggleModal(modal: NgxSmartModalComponent, top?: boolean): boolean {\n    if (modal.visible) {\n      return this._closeModal(modal);\n    } else {\n      return this._openModal(modal, top);\n    }\n  }\n\n  private _closeModal(modal: NgxSmartModalComponent): boolean {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onClose.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n      window.removeEventListener('keyup', this._escapeKeyboardEvent);\n      window.removeEventListener('keydown', this._trapFocusModal);\n    }\n\n    setTimeout(() => {\n      modal.visibleChange.emit(modal.visible);\n      modal.visible = false;\n      modal.overlayVisible = false;\n      modal.nsmDialog.first.nativeElement.removeAttribute('tabIndex');\n      modal.markForCheck();\n      modal.onCloseFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n      if (modal.refocus) {\n        this.lastElementFocused.focus();\n      }\n    }, modal.hideDelay);\n\n    return true;\n  }\n\n  private _dismissModal(modal: NgxSmartModalComponent): boolean {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onDismiss.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n    }\n\n    setTimeout(() => {\n      modal.visible = false;\n      modal.visibleChange.emit(modal.visible);\n      modal.overlayVisible = false;\n      modal.markForCheck();\n      modal.onDismissFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n    }, modal.hideDelay);\n\n    return true;\n  }\n\n  private _deleteModal(modalInstance: ModalInstance) {\n    this.removeModal(modalInstance.id);\n\n    if (!this.getModalStack().length) {\n      modalInstance.modal.removeBodyClass();\n    }\n  }\n\n  /**\n   * Resolve content according to the types\n   * @param content The modal content ( string, templateRef or Component )\n   */\n  private _resolveNgContent<T>(content: Content<T>): any[][] | Text[][] {\n    if (typeof content === 'string') {\n      const element = this._document.createTextNode(content);\n      return [[element]];\n    }\n\n    if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(null as any);\n      this.applicationRef.attachView(viewRef);\n      return [viewRef.rootNodes];\n    }\n\n    return [];\n  }\n\n  /**\n   * Close the latest opened modal if escape key event is emitted\n   * @param event The Keyboard Event\n   */\n  private _escapeKeyboardEvent = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      try {\n        const modal = this.getTopOpenedModal();\n\n        if (!modal.escapable) {\n          return false;\n        }\n\n        modal.onEscape.emit(modal);\n        this.closeLatestModal();\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Is current platform browser\n   */\n  private get isBrowser(): boolean {\n    return isPlatformBrowser(this._platformId);\n  }\n\n  /**\n   * While modal is open, the focus stay on it\n   * @param event The Keyboar dEvent\n   */\n  private _trapFocusModal = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      try {\n        const modal = this.getTopOpenedModal();\n\n        if (!modal.nsmDialog.first.nativeElement.contains(document.activeElement)) {\n          event.preventDefault();\n          event.stopPropagation();\n          modal.nsmDialog.first.nativeElement.focus();\n        }\n\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgxSmartModalService } from '../services/ngx-smart-modal.service';\nimport { NgxSmartModalStackService } from '../services/ngx-smart-modal-stack.service';\nimport { NgxSmartModalComponent } from '../components/ngx-smart-modal.component';\n\n@NgModule({\n  declarations: [NgxSmartModalComponent],\n  entryComponents: [NgxSmartModalComponent],\n  exports: [NgxSmartModalComponent],\n  imports: [CommonModule]\n})\nexport class NgxSmartModalModule {\n  /**\n   * Use in AppModule: new instance of NgxSmartModal.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [\n        NgxSmartModalService,\n        NgxSmartModalStackService\n      ]\n    };\n  }\n\n  /**\n   * Use in features modules with lazy loading: new instance of NgxSmartModal.\n   */\n  public static forChild(): ModuleWithProviders {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [\n        NgxSmartModalService,\n        NgxSmartModalStackService\n      ]\n    };\n  }\n\n  constructor(private serivce: NgxSmartModalService) {\n  }\n}\n"],"names":[],"mappings":"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"}